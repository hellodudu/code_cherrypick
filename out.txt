// 填充protobuf crossguildinfo信息
//---------------------------------------------------------------------------
VOID Ultimate::FillProtoCrossGuildInfo(world_message::CrossGuildInfo* pProtoInfo, const Guild* pGuild)
{
	if (!VALID(pProtoInfo) || !VALID(pGuild))
		return;

	pProtoInfo->set_guild_id(pGuild->GetID());
	pProtoInfo->set_server_id(sServer.GetWorldID());
	pProtoInfo->set_master_id(pGuild->GetMasterID());
	pProtoInfo->set_create_time((uint32)pGuild->GetCreateTime());
	pProtoInfo->set_hall_level(pGuild->GetLevel());
	pProtoInfo->set_score(pGuild->GetGuildScore());
	pProtoInfo->set_castle_score(pGuild->GetGuildCastleScore());
	pProtoInfo->set_member_num(pGuild->GetMemberNum());

	pProtoInfo->set_guild_name(string(pGuild->GetName()));
	pProtoInfo->set_master_name(string(pGuild->GetMasterName()));
}

//---------------------------------------------------------------------------
// 填充protobuf arenarecord信息
//---------------------------------------------------------------------------
VOID Ultimate::FillProtoArenaRecord(Player* pPlayer, world_message::ArenaRecord* pProtoInfo, const tagGroupRecord* pFirstGroup, const tagGroupRecord* pFollowGroup)
{
	if (!VALID(pPlayer) || !VALID(pProtoInfo) || !VALID(pFirstGroup) || !VALID(pFollowGroup))
		return;

	pProtoInfo->set_player_id(pPlayer->GetID());

	world_message::GroupRecord* pGroupRecord = pProtoInfo->mutable_first_group();
	if (!VALID(pGroupRecord))
		return;

	FillProtoGroupRecord(pGroupRecord, pFirstGroup);

	pGroupRecord = pProtoInfo->mutable_follow_group();
	if (!VALID(pGroupRecord))
		return;

	FillProtoGroupRecord(pGroupRecord, pFollowGroup);
}

//---------------------------------------------------------------------------
// 填充protobuf group record信息
//---------------------------------------------------------------------------
VOID Ultimate::FillProtoGroupRecord(world_message::GroupRecord* pProtoInfo, const tagGroupRecord* pGroupRecord)
{
	if (!VALID(pProtoInfo) || !VALID(pGroupRecord))
		return;
